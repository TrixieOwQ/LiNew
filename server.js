require('dotenv').config();
const express = require('express');
const rateLimit = require('express-rate-limit');
const axios = require('axios');

const app = express();
const PORT = process.env.PORT || 3000;

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
const TELEGRAM_BOT_TOKEN = process.env.TELEGRAM_BOT_TOKEN;
const TELEGRAM_CHAT_ID = process.env.TELEGRAM_CHAT_ID;

if (!TELEGRAM_BOT_TOKEN || !TELEGRAM_CHAT_ID) {
    console.error('‚ùå TELEGRAM_BOT_TOKEN –∏/–∏–ª–∏ TELEGRAM_CHAT_ID –Ω–µ –∑–∞–¥–∞–Ω—ã –≤ .env');
    process.exit(1);
}

// Rate limiting
const limiter = rateLimit({
    windowMs: 30 * 60 * 1000, // 30 –º–∏–Ω—É—Ç
    max: 2,
    message: {
        success: false,
        message: 'Too many requests. Please try again after 30 minutes.'
    },
    standardHeaders: true,
    legacyHeaders: false
});

// Middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(express.static('public'));

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram
async function sendToTelegram(text) {
    try {
        const response = await axios.post(
            `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`,
            {
                chat_id: TELEGRAM_CHAT_ID,
                text: text,
                parse_mode: 'HTML'
            }
        );
        return response.data;
    } catch (error) {
        console.error('‚ùå Telegram API error:', error.response?.data || error.message);
        throw new Error('Failed to send message to Telegram');
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ä–º—ã
app.post('/telegram-webhook', limiter, async (req, res) => {
    try {
        const { name, contact_info, price, details } = req.body;

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!name || !contact_info || !price || !details) {
            return res.status(400).json({
                success: false,
                message: 'All fields are required'
            });
        }

        if (isNaN(price)) {
            return res.status(400).json({
                success: false,
                message: 'Budget must be a number'
            });
        }

        const message = `
<b>üì® –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ —Å —Å–∞–π—Ç–∞</b>

<b>–ò–º—è:</b> ${name}
<b>–ö–æ–Ω—Ç–∞–∫—Ç:</b> ${contact_info}
<b>–ë—é–¥–∂–µ—Ç:</b> $${price}

<b>–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:</b>
${details}

<b>–î–∞—Ç–∞:</b> ${new Date().toLocaleString()}
<b>IP:</b> ${req.headers['x-forwarded-for'] || req.socket.remoteAddress}
        `;

        await sendToTelegram(message);

        res.json({
            success: true,
            message: '‚úÖ Your order has been received! Please wait up to 24 hours for us to contact you.'
        });

    } catch (error) {
        console.error('‚ùå Form processing error:', error);
        res.status(500).json({
            success: false,
            message: 'Server error. Try again later.'
        });
    }
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, () => {
    console.log(`‚úÖ Server running on port ${PORT}`);
});
